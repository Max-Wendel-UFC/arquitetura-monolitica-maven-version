# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      
      # run tests!
      - run: mvn integration-test
      - run: mvn dependency:go-offline
      - run: mvn spotbugs:check
      - run: mvn clean install
      - run: mvn sonar:sonar -Dsonar.projectKey=Max-Wendel-UFC_arquitetura-monolitica-maven-version -Dsonar.organization=max-wendel-ufc-github -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=1eec5782cd1b193019215d4d8e70976d40658cf4

      - save_cache:
          paths:
            - ~/.m2
            #Sonar-cloud files cache
            - ~/.sonar/cache
          key: v1-dependencies-{{ checksum "pom.xml" }}
        
      - store_artifacts: # store the uberjar as an artifact
          path: target/monolitica.war
      - store_artifacts: # store the uberjar as an artifact
          path: target/checkstyle-result.xml
      - store_artifacts: # store the uberjar as an artifact
          path: target/spotbugsXml.xml
      - store_artifacts: 
          path: target/site/jacoco/index.html
      
      
